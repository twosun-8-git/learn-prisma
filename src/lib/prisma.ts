import { PrismaClient } from "@prisma/client";

let queryCount = 0;
let queryLogs: string[] = [];
let queryTotalDuration = 0;

// PrismaClient„ÅÆ„Ç§„É≥„Çπ„Çø„É≥„Çπ„Çí‰ΩúÊàê
export const p = new PrismaClient({
  log: [
    { emit: "event", level: "query" },
    { emit: "stdout", level: "warn" },
    { emit: "stdout", level: "error" },
  ],
});

// „ÇØ„Ç®„É™„ÅåÂÆüË°å„Åï„Çå„Åü„Å®„Åç„Å´Âëº„Å≥Âá∫„Åï„Çå„Çã
p.$on("query", (e) => {
  queryCount++;

  queryLogs.push(
    `„ÇØ„Ç®„É™ ${queryCount}: ${e.duration}ms - ${e.query.substring(0, 120)}...`
  );

  queryTotalDuration += e.duration;
});

// „ÇØ„Ç®„É™Êï∞„ÇíË°®Á§∫„Åô„ÇãÈñ¢Êï∞
export function showQueryStats() {
  console.log("\n" + "‚îÅ".repeat(80));
  console.log("üîç „ÇØ„Ç®„É™ÂÆüË°å„É≠„Ç∞");
  console.log("‚îÅ".repeat(80));
  console.log(queryLogs.join("\n"));
  console.log("‚îÅ".repeat(80));
  console.log(`üìà „ÇØ„Ç®„É™ÂÆüË°åÊï∞: ${queryCount}Âõû`);
  console.log(`‚è±Ô∏è  Á∑èÂÆüË°åÊôÇÈñì: ${queryTotalDuration}ms`);
  console.log(
    `üìä Âπ≥ÂùáÂÆüË°åÊôÇÈñì: ${
      queryCount > 0
        ? Math.round((queryTotalDuration / queryCount) * 100) / 100
        : 0
    }ms`
  );
  console.log("‚îÅ".repeat(80));
  queryCount = 0;
  queryLogs = [];
  queryTotalDuration = 0;
  return;
}
